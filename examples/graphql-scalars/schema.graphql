# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Mutation {
  addRecipe(recipe: RecipeInput!): Recipe!
}

"""
A string that cannot be passed as an empty value
"""
scalar NonEmptyString

"""
Floats that will have a value of 0 or more.
"""
scalar NonNegativeFloat

"""
Integers that will have a value of 0 or more.
"""
scalar NonNegativeInt

type Query {
  recipe(title: String!): Recipe

  """
  Get all the recipes from around the world
  """
  recipes: [Recipe!]!
}

"""
Object representing cooking recipe
"""
type Recipe {
  averageRating: NonNegativeFloat
  creationDate: Timestamp!

  """
  The recipe description with preparation info
  """
  description: NonEmptyString
  ratings: [NonNegativeInt!]!
  ratingsCount(minRate: Int! = 0): NonNegativeInt!
  specification: NonEmptyString @deprecated(reason: "Use 'description' field instead")
  title: NonEmptyString!
}

input RecipeInput {
  description: NonEmptyString
  title: NonEmptyString!
}

"""
The javascript `Date` as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp
